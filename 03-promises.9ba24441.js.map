{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACWC,KAAKC,SAAW,GAGtCJ,EAAQ,C,SAACH,E,MAAUC,IAGnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAEtBA,EAAM,G,CAIb,SAASO,GAAYR,SAAEA,EAAQC,MAAEA,IAC/BJ,EAAAY,OAAOC,QAAS,uBAAqBV,QAAiBC,M,CAGxD,SAASU,GAAcX,SAAEA,EAAQC,MAAEA,IACjCJ,EAAAY,OAAOG,QAAS,sBAAoBZ,QAAeC,M,CAtBnCY,SAASC,cAAc,SA0C/BC,iBAAiB,UAjB3B,SAAyBC,GACvBA,EAAGC,iBACH,MAAMC,EAAW,IAAIC,SAASH,EAAGI,eAC3BC,EAAa,GAEnB,IAAK,MAAOC,EAAKC,KAAUL,EAASM,UAClCH,EAAWC,GAAOG,OAAOF,GAG3B,IAAIG,OAAEA,EAAMC,KAAEA,EAAI1B,MAAEA,GAAUoB,EAE9B,IAAK,IAAIrB,EAAW,EAAGA,GAAY0B,EAAQ1B,GAAY,EACrDC,GAAS0B,EACT5B,EAAcC,EAAUC,GAAO2B,KAAKpB,GAAYqB,MAAMlB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputData = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n    // Fulfill\n    resolve({position, delay})\n    } else {\n    // Reject\n    reject({position, delay})\n    }\n    }, delay);\n  });\n}\n\nfunction successful ({ position, delay }) {\n  Notify.success (`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction unsuccessful ({ position, delay }) {\n  Notify.failure (`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction createPromises (ev) {\n  ev.preventDefault();\n  const formData = new FormData(ev.currentTarget);\n  const parameters = {};\n\n  for (const [key, value] of formData.entries()) {\n    parameters[key] = Number(value);\n  }\n\n  let { amount, step, delay } = parameters;\n  \n  for (let position = 1; position <= amount; position += 1) {\n    delay += step;\n    createPromise(position, delay).then(successful).catch(unsuccessful);\n  }\n}\n\ninputData.addEventListener('submit', createPromises);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$successful","Notify","success","$47d4ff9957288465$var$unsuccessful","failure","document","querySelector","addEventListener","ev","preventDefault","formData","FormData","currentTarget","parameters","key","value","entries","Number","amount","step","then","catch"],"version":3,"file":"03-promises.9ba24441.js.map"}